name: Upload Release Build

on:
  push:
    branches: [main]
  workflow_dispatch: #manual

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      is-released: ${{ steps.check-release.outputs.exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract version from manifest.json
        id: get-version
        run: |
          VERSION=$(jq -r .version manifest.json)
          echo "Version is $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Check if version tag already exists
        id: check-release
        run: |
          if git fetch --tags && git rev-parse "v${{ steps.get-version.outputs.version }}" >/dev/null 2>&1; then
            echo "Release already exists"
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "No release found"
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
  release:
    needs: check-version
    if: needs.check-version.outputs.is-released == 'false'
    name: Release
    runs-on: ubuntu-latest
    outputs:
      firefox_success: ${{ steps.step-firefox.outcome }}
      chrome_success: ${{ steps.step-chrome.outcome }}
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Create directory
        run: cd ..; mkdir ./builds

      # Zip the source code
      - name: Zip Source
        run: zip -r ../builds/Source.zip *

      # Install dependencies
      - name: Install dependencies
        run: npm i

      # Create build directory
      - name: Create build directory
        run: mkdir ./builds

      # Build for Firefox, Chrome and Edge
      - name: Build for Firefox
        run: npm run build:ci:firefox
      - name: Build for Chrome
        run: npm run build:ci:chrome
      - name: Build for Edge
        run: npm run build:ci:edge

      # Sign & Upload Firefox artifacts
      - name: Publish Firefox
        continue-on-error: true
        id: step-firefox
        env:
          FIREFOX_ISSUER: ${{ secrets.FIREFOX_ISSUER }}
          FIREFOX_SECRET: ${{ secrets.FIREFOX_SECRET }}
        run: npx web-ext sign --channel listed -s ./dist/firefox/ --upload-source-code  ../builds/Source.zip --artifacts-dir ./dist/firefox --api-key $FIREFOX_ISSUER --api-secret $FIREFOX_SECRET
      - name: Move Firefox
        if: steps.step-firefox.outcome == 'success'
        run: mv ./dist/firefox/digitec_galaxus_helper-*.xpi ./builds/FirefoxExtension.xpi
      - name: Attach Firefox
        if: steps.step-firefox.outcome == 'success'
        uses: Shopify/upload-to-release@07611424e04f1475ddf550e1c0dd650b867d5467
        with:
          name: FirefoxExtension.xpi
          path: ./builds/FirefoxExtension.xpi
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Chrome
        id: step-chrome
        continue-on-error: true
        uses: wdzeng/chrome-extension@v1
        with:
          client-id: ${{ secrets.CHROME_CLIENT_ID }}
          client-secret: ${{ secrets.CHROME_CLIENT_SECRET }}
          refresh-token: ${{ secrets.CHROME_REFRESH_TOKEN }}
          zip-path: ./builds/ChromeExtension.zip
          extension-id: opkinhhinaicnbmofgkocallpfeiggnh
      - name: Zip Chrome
        if: steps.step-chrome.outcome == 'success'
        run: cd ./dist/chrome ; zip -r ../../builds/ChromeExtension.zip *
      - name: Attach Chrome
        if: steps.step-chrome.outcome == 'success'
        uses: Shopify/upload-to-release@07611424e04f1475ddf550e1c0dd650b867d5467
        with:
          name: ChromeExtension.zip
          path: ./builds/ChromeExtension.zip
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      # Upload Edge artifacts
      # - name: Zip Edge Artifacts
      #   run: cd ./dist/edge ; zip -r ../../builds/EdgeExtension.zip *
      # - name: Upload EdgeExtension to release
      #   uses: Shopify/upload-to-release@07611424e04f1475ddf550e1c0dd650b867d5467
      #   with:
      #     name: EdgeExtension.zip
      #     path: ./builds/EdgeExtension.zip
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Publish to Edge Addon Store
      #   continue-on-error: true
      #   uses: wdzeng/edge-addon@v2
      #   with:
      #     product-id: <your edge product id>
      #     zip-path: ./builds/EdgeExtension.zip
      #     api-key: ${{ secrets.EDGE_CLIENT_SECRET }}
      #     client-id: ${{ secrets.EDGE_CLIENT_ID }}

      - name: Extract version from manifest.json
        id: get_version
        run: |
          VERSION=$(jq -r .version manifest.json)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Upload release assets (from release event)
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: ${{ steps.get_version.outputs.version }}
          body: "Automated release for ${{ steps.get_version.outputs.version }}"
          files: |
            builds/FirefoxExtension.xpi
            builds/ChromeExtension.zip
            builds/EdgeExtension.zip

      - name: Upload release assets (from push event)
        if: github.event_name == 'push'
        run: |
          gh release create "${{ steps.get_version.outputs.version }}" \
            --title "${{ steps.get_version.outputs.version }}" \
            --notes "Automated release for ${{ steps.get_version.outputs.version }}" \
            builds/FirefoxExtension.xpi \
            builds/ChromeExtension.zip \
            builds/EdgeExtension.zip
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

